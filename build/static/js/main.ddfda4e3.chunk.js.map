{"version":3,"sources":["firebase.js","actions/types.js","actions/index.js","components/ColorPanel/ColorPanel.js","components/image/slack.svg","components/SidePanel/UserPanel.js","components/SidePanel/Channel.js","components/SidePanel/DirectMessage.js","components/SidePanel/Starred.js","components/SidePanel/SidePanel.js","components/Messages/MessagesHeader.js","components/Messages/FileModal.js","components/Messages/ProgressBar.js","components/Messages/MessageForm.js","components/Messages/Message.js","components/Messages/Typing.js","components/Messages/Skeleton.js","components/Messages/Messages.js","components/MetaPanel/MetaPanel.js","components/App.js","components/Auth/Login.js","components/Auth/Register.js","registerServiceWorker.js","reducers/index.js","Spinner.js","components/Auth/ForgotPassword.js","components/Auth/VerifyEmail.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","googleAuthProvider","auth","GoogleAuthProvider","SET_USER","CLEAR_USER","SET_CURRENT_CHANNEL","SET_PRIVATE_CHANNEL","SET_USER_POSTS","SET_COLORS","setCurrentChannel","channel","type","actionTypes","payload","currentChannel","setPrivateChannel","isPrivateChannel","ColorPanel","state","modal","primary","secondary","user","props","currentUser","usersRef","database","ref","userColors","removeListener","child","uid","off","addListener","userId","on","snap","unshift","val","setState","handleChangePrimary","color","hex","handleChangeSecondary","handleSaveColors","saveColors","push","update","then","console","log","closeModal","catch","err","error","displayUserColors","colors","length","map","i","Fragment","Divider","motion","div","initial","opacity","animate","transition","delay","className","onClick","setColors","style","background","openModal","this","Sidebar","as","Menu","icon","inverted","vertical","visible","width","Button","size","Modal","basic","open","onClose","Header","Content","Segment","Label","content","onChange","Actions","Icon","name","React","Component","connect","primaryColor","secondaryColor","UserPanel","modal2","previewImage","croppedImage","blob","uploadedCroppedImage","storageRef","storage","userRef","channelRef","metadata","contentType","username","errors","messagesRef","openModal2","closeModal2","dropdownOptions","key","text","displayName","disabled","handleSignout","uploadCroppedImage","put","getDownloadURL","downloadURL","changeAvatar","updateProfile","photoURL","avatar","id","handleChange","event","file","target","files","reader","FileReader","readAsDataURL","addEventListener","result","handleCropImage","avatarEditor","getImageScaledToCanvas","toBlob","imageUrl","URL","createObjectURL","signOut","isFormValid","isFormEmpty","message","concat","editProfile","e","preventDefault","handleInputChange","value","displayErrors","handleInputError","inputName","some","toLowerCase","includes","iconVariants","hidden","rotate","duration","Grid","Column","Row","padding","margin","floated","Image","src","slack","Dropdown","trigger","spaced","options","Input","fluid","label","centered","stackable","columns","node","image","height","border","scale","Form","onSubmit","iconPosition","placeholder","required","Channel","channels","notifications","channelName","channelDetails","firstLoad","activeChannel","typingRef","loadedChannel","setFirstChannel","getNotificationListener","channelId","handleNotifications","currentChannelId","lastTotal","index","findIndex","notification","total","numChildren","count","lastKnownTotal","firstChannel","addChannel","newChannel","details","createdBy","handleSubmit","changeChannel","remove","clearNotifications","updatedNotification","displayChannel","Item","active","getNotificationCount","forEach","Field","DirectMessages","users","connectedRef","presenceRef","removeListeners","addListeners","currentUserUid","loadedUsers","set","onDisconnect","addStatusToUser","connected","updatedUsers","reduce","acc","isUserOnline","status","channelData","getChannelId","setActiveChannel","currentUserId","fontStyle","Starred","starredChannels","starredChannel","channelToRemove","filteredChannel","filter","SidePanel","fixed","fontSize","DirectMessage","MessagesHeader","numUniqueUsers","handleSearchChange","searchLoading","handleStar","isChannelStarred","clearing","marginBottom","Subheader","whileTap","loading","FileModal","authorized","addFile","sendFile","uploadFile","isAuthorized","mime","lookup","clearFile","fileName","ProgressBar","uploadState","percentUploaded","Progress","percent","progress","indicating","MessageForm","uploadTask","emojiPicker","createMessage","fileUrl","timestamp","ServerValue","TIMESTAMP","sendMessage","getMessagesRef","getPath","pathToUpload","filePath","uuidv4","Math","round","bytesTransferred","totalBytes","snapshot","downloadUrl","sendFileMessage","handleKeyDown","handleTogglePicker","colonToUnicode","replace","x","emoji","emojiIndex","emojis","unicode","native","handleAddEmoji","oldMessage","newMessage","colons","setTimeout","messageInputRef","focus","cancel","theme","onSelect","title","onKeyDown","labelPosition","Group","widths","isOwnMessage","isImage","hasOwnProperty","Message","Comment","Avatar","Author","Metadata","moment","fromNow","Text","Typing","Skeleton","Messages","privateMessagesRef","privateChannel","messages","messagesLoading","searchTerm","searchResults","typingUsers","listeners","scrollToBottom","messageEnd","scrollIntoView","behavior","listener","addToListeners","newListeners","addMessageListener","addTypingListener","loadedMessages","countUniqueUsers","countUserPosts","uniqueUsers","plural","userPosts","setUserPosts","handleSearchMessages","channelMessages","regex","RegExp","match","displayMessages","displayChannelName","prevState","starChannel","addUserStarsListener","once","data","prevStarred","Object","keys","displayTypingUsers","display","alignItems","displayMessagesSkeleton","Array","_","prevProps","MetaPanel","activeIndex","setActiveIndex","titleProps","newIndex","displayTopPosters","posts","entries","sort","a","b","List","Description","formatCount","reverse","slice","num","attached","Accordion","styled","Title","circular","marginLeft","Login","email","password","loading2","signInWithEmailAndPassword","signedInUser","saveUser","createdUser","googleLogin","signInWithPopup","hover","yoyo","Infinity","textAlign","verticalAlign","maxWidth","variants","stiffness","stacked","whileHover","to","marginTop","Register","passwordConfirmation","isPasswordValid","isEmailValid","createUserWithEmailAndPassword","md5","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","initialUserState","isLoading","initialChannelState","initialColorsState","rootReducer","combineReducers","action","Spinner","Dimmer","Loader","resetPassword","sendPasswordResetEmail","VerifyEmail","sendVerification","sendEmailVerification","store","createStore","composeWithDevTools","Root","onAuthStateChanged","setUser","history","clearUser","exact","path","component","App","ForgotPassword","RootWithAuth","withRouter","ReactDOM","render","document","getElementById","process","origin","fetch","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ddfda4e3.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\nimport \"firebase/storage\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyD7SF7xDhB4Z3e6FSrh3Bm-P_Z7M_hcOWM\",\r\n  authDomain: \"notify-slack.firebaseapp.com\",\r\n  projectId: \"notify-slack\",\r\n  storageBucket: \"notify-slack.appspot.com\",\r\n  messagingSenderId: \"736375886643\",\r\n  appId: \"1:736375886643:web:2d1932159fa12fdeaa6446\",\r\n  measurementId: \"G-LYLF267PNT\",\r\n};\r\n\r\nfirebase.initializeApp(config);\r\nexport const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport default firebase;\r\n","// User Action_Types\r\nexport const SET_USER = \"SET_USER\";\r\nexport const CLEAR_USER = \"CLEAR_USER\";\r\n\r\n// Channel Action_Types\r\nexport const SET_CURRENT_CHANNEL = \"SET_CURRENT_CHANNEL\";\r\nexport const SET_PRIVATE_CHANNEL = \"SET_PRIVATE_CHANNEL\";\r\nexport const SET_USER_POSTS = \"SET_USER_POSTS\";\r\n\r\n// Colors Action Types\r\nexport const SET_COLORS = \"SET_COLORS\";\r\n","import * as actionTypes from \"./types\";\r\n\r\n// User Action\r\nexport const setUser = (user) => {\r\n  return {\r\n    type: actionTypes.SET_USER,\r\n    payload: {\r\n      currentUser: user,\r\n    },\r\n  };\r\n};\r\n\r\nexport const clearUser = () => {\r\n  return {\r\n    type: actionTypes.CLEAR_USER,\r\n  };\r\n};\r\n\r\n// Channel Action\r\n\r\nexport const setCurrentChannel = (channel) => {\r\n  return {\r\n    type: actionTypes.SET_CURRENT_CHANNEL,\r\n    payload: {\r\n      currentChannel: channel,\r\n    },\r\n  };\r\n};\r\n\r\nexport const setPrivateChannel = (isPrivateChannel) => {\r\n  return {\r\n    type: actionTypes.SET_PRIVATE_CHANNEL,\r\n    payload: {\r\n      isPrivateChannel,\r\n    },\r\n  };\r\n};\r\n\r\nexport const setUserPosts = (userPosts) => {\r\n  return {\r\n    type: actionTypes.SET_USER_POSTS,\r\n    payload: {\r\n      userPosts,\r\n    },\r\n  };\r\n};\r\n\r\n// Color Actions\r\n\r\nexport const setColors = (primaryColor, secondaryColor) => {\r\n  return {\r\n    type: actionTypes.SET_COLORS,\r\n    payload: {\r\n      primaryColor,\r\n      secondaryColor,\r\n    },\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport firebase from \"../../firebase\";\r\nimport { connect } from \"react-redux\";\r\nimport { setColors } from \"../../actions\";\r\nimport {\r\n  Sidebar,\r\n  Menu,\r\n  Divider,\r\n  Button,\r\n  Modal,\r\n  Icon,\r\n  Label,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nclass ColorPanel extends React.Component {\r\n  state = {\r\n    modal: false,\r\n    primary: \"\",\r\n    secondary: \"\",\r\n    user: this.props.currentUser,\r\n    usersRef: firebase.database().ref(\"users\"),\r\n    userColors: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.state.user) {\r\n      this.addListener(this.state.user?.uid);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.removeListener();\r\n  }\r\n\r\n  removeListener = () => {\r\n    this.state.usersRef.child(`${this.state.user?.uid}/colors`).off();\r\n  };\r\n\r\n  addListener = (userId) => {\r\n    let userColors = [];\r\n    this.state.usersRef.child(`${userId}/colors`).on(\"child_added\", (snap) => {\r\n      userColors.unshift(snap.val());\r\n      this.setState({ userColors });\r\n    });\r\n  };\r\n\r\n  handleChangePrimary = (color) => this.setState({ primary: color.hex });\r\n\r\n  handleChangeSecondary = (color) => this.setState({ secondary: color.hex });\r\n\r\n  handleSaveColors = () => {\r\n    if (this.state.primary && this.state.secondary) {\r\n      this.saveColors(this.state.primary, this.state.secondary);\r\n    }\r\n  };\r\n\r\n  saveColors = (primary, secondary) => {\r\n    this.state.usersRef\r\n      .child(`${this.state.user?.uid}/colors`)\r\n      .push()\r\n      .update({\r\n        primary,\r\n        secondary,\r\n      })\r\n      .then(() => {\r\n        console.log(\"Colors added\");\r\n        this.closeModal();\r\n      })\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  displayUserColors = (colors) =>\r\n    colors.length > 0 &&\r\n    colors.map((color, i) => (\r\n      <React.Fragment key={i}>\r\n        <Divider />\r\n        <motion.div\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          transition={{ delay: 1 }}\r\n          className=\"color__container\"\r\n          onClick={() => this.props.setColors(color.primary, color.secondary)}\r\n        >\r\n          <div className=\"color__square\" style={{ background: color.primary }}>\r\n            <div\r\n              className=\"color__overlay\"\r\n              style={{ background: color.secondary }}\r\n            />\r\n          </div>\r\n        </motion.div>\r\n      </React.Fragment>\r\n    ));\r\n\r\n  openModal = () => this.setState({ modal: true });\r\n\r\n  closeModal = () => this.setState({ modal: false });\r\n\r\n  render() {\r\n    const { modal, primary, secondary, userColors } = this.state;\r\n\r\n    return (\r\n      <Sidebar\r\n        as={Menu}\r\n        icon=\"labeled\"\r\n        inverted\r\n        vertical\r\n        visible\r\n        width=\"very thin\"\r\n      >\r\n        <Divider />\r\n        <motion.div\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          transition={{ delay: 1 }}\r\n        >\r\n          <Button\r\n            icon=\"add\"\r\n            size=\"small\"\r\n            color=\"blue\"\r\n            onClick={this.openModal}\r\n          />\r\n          {this.displayUserColors(userColors)}\r\n        </motion.div>\r\n\r\n        {/* Color Picker Modal */}\r\n        <Modal\r\n          basic\r\n          open={modal}\r\n          onClose={this.closeModal}\r\n          className=\"color_modal\"\r\n        >\r\n          <Modal.Header>Choose App Colors</Modal.Header>\r\n          <Modal.Content>\r\n            <Segment inverted className=\"ui horizontal segments\">\r\n              <Segment inverted>\r\n                <Label content=\"Primary Color\" />\r\n                <SketchPicker\r\n                  className=\"sketch_picker\"\r\n                  color={primary}\r\n                  onChange={this.handleChangePrimary}\r\n                />\r\n              </Segment>\r\n\r\n              <Segment inverted>\r\n                <Label content=\"Secondary Color\" />\r\n                <SketchPicker\r\n                  className=\"sketch_picker\"\r\n                  color={secondary}\r\n                  onChange={this.handleChangeSecondary}\r\n                />\r\n              </Segment>\r\n            </Segment>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button color=\"green\" inverted onClick={this.handleSaveColors}>\r\n              <Icon name=\"checkmark\" /> Save Colors\r\n            </Button>\r\n            <Button color=\"red\" inverted onClick={this.closeModal}>\r\n              <Icon name=\"remove\" /> Cancel\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </Sidebar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { setColors })(ColorPanel);\r\n","export default __webpack_public_path__ + \"static/media/slack.ddd06f0d.svg\";","import React from \"react\";\r\nimport firebase from \"../../firebase\";\r\nimport AvatarEditor from \"react-avatar-editor\";\r\n\r\nimport {\r\n  Grid,\r\n  Header,\r\n  Icon,\r\n  Dropdown,\r\n  Image,\r\n  Modal,\r\n  Input,\r\n  Button,\r\n  Form,\r\n  Message,\r\n} from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport slack from \"../image/slack.svg\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nclass UserPanel extends React.Component {\r\n  state = {\r\n    user: this.props.currentUser,\r\n    modal: false,\r\n    modal2: false,\r\n    previewImage: \"\",\r\n    croppedImage: \"\",\r\n    blob: null,\r\n    uploadedCroppedImage: \"\",\r\n    storageRef: firebase.storage().ref(),\r\n    userRef: firebase.auth().currentUser,\r\n    usersRef: firebase.database().ref(\"users\"),\r\n    channelRef: firebase.database().ref(\"channel\"),\r\n    metadata: {\r\n      contentType: \"image/jpeg\",\r\n    },\r\n    username: \"\",\r\n    errors: [],\r\n    channel: this.props.currentChannel,\r\n    messagesRef: firebase.database().ref(\"messages\"),\r\n  };\r\n\r\n  openModal = () => this.setState({ modal: true });\r\n  closeModal = () => this.setState({ modal: false });\r\n\r\n  openModal2 = () => this.setState({ modal2: true });\r\n  closeModal2 = () => this.setState({ modal2: false });\r\n\r\n  dropdownOptions = () => [\r\n    {\r\n      key: \"user\",\r\n      text: (\r\n        <span>\r\n          Signed in as <strong>{this.state.user?.displayName}</strong>\r\n        </span>\r\n      ),\r\n      disabled: true,\r\n    },\r\n    {\r\n      key: \"avatar\",\r\n      text: <span onClick={this.openModal}>Change Avatar</span>,\r\n    },\r\n    {\r\n      key: \"editprofile\",\r\n      text: <span onClick={this.openModal2}>Change Username</span>,\r\n    },\r\n    {\r\n      key: \"signout\",\r\n      text: <span onClick={this.handleSignout}>Sign Out</span>,\r\n    },\r\n  ];\r\n\r\n  uploadCroppedImage = () => {\r\n    const { storageRef, userRef, blob, metadata } = this.state;\r\n\r\n    storageRef\r\n      .child(`avatars/users/${userRef.uid}`)\r\n      .put(blob, metadata)\r\n      .then((snap) => {\r\n        snap.ref.getDownloadURL().then((downloadURL) => {\r\n          this.setState({ uploadedCroppedImage: downloadURL }, () =>\r\n            this.changeAvatar()\r\n          );\r\n        });\r\n      });\r\n  };\r\n\r\n  changeAvatar = () => {\r\n    this.state.userRef\r\n      .updateProfile({\r\n        photoURL: this.state.uploadedCroppedImage,\r\n      })\r\n      .then(() => {\r\n        console.log(\"PhotoURL updated\");\r\n        this.closeModal();\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n\r\n    this.state.usersRef\r\n      .child(this.state.user?.uid)\r\n      .update({ avatar: this.state.uploadedCroppedImage })\r\n      .then(() => {\r\n        console.log(\"User avatar updated\");\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n\r\n    this.state.channelRef\r\n      .child(this.state.channel?.id)\r\n      .child(\"createdBy\")\r\n      .update({ avatar: this.state.uploadedCroppedImage })\r\n      .then(() => console.log(\"channel-username updated\"))\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const file = event.target.files[0];\r\n    const reader = new FileReader();\r\n\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n      reader.addEventListener(\"load\", () => {\r\n        this.setState({ previewImage: reader.result });\r\n      });\r\n    }\r\n  };\r\n\r\n  handleCropImage = () => {\r\n    if (this.avatarEditor) {\r\n      this.avatarEditor.getImageScaledToCanvas().toBlob((blob) => {\r\n        let imageUrl = URL.createObjectURL(blob);\r\n        this.setState({\r\n          croppedImage: imageUrl,\r\n          blob,\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  handleSignout = () => {\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => console.log(\"signed out!\"));\r\n  };\r\n\r\n  isFormValid = () => {\r\n    let errors = [];\r\n    let error;\r\n\r\n    if (this.isFormEmpty(this.state)) {\r\n      error = { message: \"Username Can't Empty\" };\r\n      this.setState({ errors: errors.concat(error) });\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  isFormEmpty = ({ username }) => {\r\n    return !username.length;\r\n  };\r\n\r\n  editProfile = (e) => {\r\n    e.preventDefault();\r\n    if (this.isFormValid()) {\r\n      this.setState({ errors: [] });\r\n      this.updateProfile();\r\n    }\r\n  };\r\n\r\n  updateProfile = () => {\r\n    this.state.userRef\r\n      .updateProfile({\r\n        displayName: this.state.username,\r\n      })\r\n      .then(() => {\r\n        console.log(\"redux username updated\");\r\n        this.closeModal2();\r\n      })\r\n      .catch((err) => console.error(err));\r\n\r\n    this.state.usersRef\r\n      .child(this.state.user?.uid)\r\n      .update({ name: this.state.username })\r\n      .then(() => {\r\n        console.log(\"database username updated\");\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n\r\n    this.state.channelRef\r\n      .child(this.state.channel?.id)\r\n      .child(\"createdBy\")\r\n      .update({ name: this.state.username })\r\n      .then(() => console.log(\"channel-username updated\"))\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  displayErrors = (errors) =>\r\n    errors.map((error, i) => <p key={i}>{error.message}</p>);\r\n\r\n  handleInputError = (errors, inputName) => {\r\n    return errors.some((error) =>\r\n      error.message.toLowerCase().includes(inputName)\r\n    )\r\n      ? \"error\"\r\n      : \"\";\r\n  };\r\n\r\n  iconVariants = {\r\n    hidden: {\r\n      opacity: 0,\r\n    },\r\n    visible: {\r\n      opacity: 1,\r\n      rotate: [0, 0, 270, 270, 0],\r\n      transition: {\r\n        delay: 0.5,\r\n        duration: 2,\r\n      },\r\n    },\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      user,\r\n      modal,\r\n      previewImage,\r\n      croppedImage,\r\n      modal2,\r\n      username,\r\n      errors,\r\n    } = this.state;\r\n    const { primaryColor } = this.props;\r\n\r\n    return (\r\n      <Grid style={{ background: primaryColor }}>\r\n        <Grid.Column>\r\n          <Grid.Row style={{ padding: \"1.2em\", margin: 0 }}>\r\n            {/* App Header */}\r\n            <Header inverted floated=\"left\" as=\"h3\">\r\n              <Image src={slack} className=\"slack__img\" />\r\n\r\n              <Header.Content className=\"size\">Notify-Slack</Header.Content>\r\n            </Header>\r\n            {/* User Dropdown  */}\r\n            <motion.div\r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 1 }}\r\n              transition={{ delay: 1.7 }}\r\n            >\r\n              <Header style={{ padding: \"0.25em\" }} as=\"h4\" inverted>\r\n                <Dropdown\r\n                  trigger={\r\n                    <span>\r\n                      <Image src={user?.photoURL} spaced=\"right\" avatar />\r\n                      {user?.displayName}\r\n                    </span>\r\n                  }\r\n                  options={this.dropdownOptions()}\r\n                />\r\n              </Header>\r\n            </motion.div>\r\n          </Grid.Row>\r\n\r\n          {/* Change User Avatar Modal   */}\r\n          <Modal basic open={modal} onClose={this.closeModal}>\r\n            <Modal.Header>Change Avatar</Modal.Header>\r\n            <Modal.Content>\r\n              <Input\r\n                onChange={this.handleChange}\r\n                fluid\r\n                type=\"file\"\r\n                label=\"New Avatar\"\r\n                name=\"previewImage\"\r\n              />\r\n              <Grid centered stackable columns={2}>\r\n                <Grid.Row centered>\r\n                  <Grid.Column className=\"ui center aligned grid\">\r\n                    {previewImage && (\r\n                      <AvatarEditor\r\n                        ref={(node) => (this.avatarEditor = node)}\r\n                        image={previewImage}\r\n                        width={120}\r\n                        height={120}\r\n                        border={50}\r\n                        scale={1.2}\r\n                      />\r\n                    )}\r\n                  </Grid.Column>\r\n                  <Grid.Column>\r\n                    {croppedImage && (\r\n                      <Image\r\n                        style={{ margin: \"3.5em auto\" }}\r\n                        width={100}\r\n                        height={100}\r\n                        src={croppedImage}\r\n                      />\r\n                    )}\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              </Grid>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n              {croppedImage && (\r\n                <Button\r\n                  color=\"green\"\r\n                  inverted\r\n                  onClick={this.uploadCroppedImage}\r\n                >\r\n                  <Icon name=\"save\" /> Change Avatar\r\n                </Button>\r\n              )}\r\n              <Button color=\"green\" inverted onClick={this.handleCropImage}>\r\n                <Icon name=\"image\" /> Preview\r\n              </Button>\r\n              <Button color=\"red\" inverted onClick={this.closeModal}>\r\n                <Icon name=\"remove\" /> Cancel\r\n              </Button>\r\n            </Modal.Actions>\r\n          </Modal>\r\n\r\n          <Modal open={modal2} onClose={this.closeModal2}>\r\n            <Modal.Header>Edit Profile</Modal.Header>\r\n            <Modal.Content>\r\n              <Form onSubmit={this.editProfile}>\r\n                <Form.Input\r\n                  fluid\r\n                  name=\"username\"\r\n                  value={username}\r\n                  onChange={this.handleInputChange}\r\n                  className={this.handleInputError(errors, \"username\")}\r\n                  icon=\"user\"\r\n                  iconPosition=\"left\"\r\n                  placeholder=\"New Username\"\r\n                  required\r\n                />\r\n              </Form>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n              <Button color=\"green\" inverted onClick={this.editProfile}>\r\n                <Icon name=\"checkmark\" /> Edit Profile\r\n              </Button>\r\n              <Button color=\"red\" inverted onClick={this.closeModal2}>\r\n                <Icon name=\"remove\" /> Cancel\r\n              </Button>\r\n            </Modal.Actions>\r\n            {errors.length > 0 && (\r\n              <Message error>\r\n                <h3>Error</h3>\r\n                {this.displayErrors(errors)}\r\n              </Message>\r\n            )}\r\n          </Modal>\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  currentUser: state.user.currentUser,\r\n});\r\n\r\nexport default connect(mapStateToProps)(UserPanel);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Menu,\r\n  Icon,\r\n  Modal,\r\n  Input,\r\n  Form,\r\n  Button,\r\n  Message,\r\n  Label,\r\n} from \"semantic-ui-react\";\r\nimport firebase from \"../../firebase\";\r\nimport { connect } from \"react-redux\";\r\nimport { setCurrentChannel, setPrivateChannel } from \"../../actions/index\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nclass Channel extends Component {\r\n  state = {\r\n    user: this.props.currentUser,\r\n    channels: [],\r\n    channel: null,\r\n    notifications: [],\r\n    modal: false,\r\n    channelName: \"\",\r\n    channelDetails: \"\",\r\n    errors: [],\r\n    firstLoad: true,\r\n    activeChannel: \"\",\r\n    channelRef: firebase.database().ref(\"channel\"),\r\n    messagesRef: firebase.database().ref(\"messages\"),\r\n    typingRef: firebase.database().ref(\"typing\"),\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.addListener();\r\n  }\r\n\r\n  addListener = () => {\r\n    let loadedChannel = [];\r\n    this.state.channelRef.on(\"child_added\", (snap) => {\r\n      loadedChannel.push(snap.val());\r\n      this.setState({ channels: loadedChannel }, () => this.setFirstChannel());\r\n      this.getNotificationListener(snap.key);\r\n    });\r\n  };\r\n\r\n  getNotificationListener = (channelId) => {\r\n    this.state.messagesRef.child(channelId).on(\"value\", (snap) => {\r\n      if (this.state.channel) {\r\n        this.handleNotifications(\r\n          channelId,\r\n          this.state.channel.id,\r\n          this.state.notifications,\r\n          snap\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  handleNotifications = (channelId, currentChannelId, notifications, snap) => {\r\n    let lastTotal = 0;\r\n\r\n    let index = notifications.findIndex(\r\n      (notification) => notification.id === channelId\r\n    );\r\n\r\n    if (index !== -1) {\r\n      if (channelId !== currentChannelId) {\r\n        lastTotal = notifications[index].total;\r\n\r\n        if (snap.numChildren() - lastTotal > 0) {\r\n          notifications[index].count = snap.numChildren() - lastTotal;\r\n        }\r\n      }\r\n      notifications[index].lastKnownTotal = snap.numChildren();\r\n    } else {\r\n      notifications.push({\r\n        id: channelId,\r\n        total: snap.numChildren(),\r\n        lastKnownTotal: snap.numChildren(),\r\n        count: 0,\r\n      });\r\n    }\r\n\r\n    this.setState({ notifications });\r\n  };\r\n\r\n  setFirstChannel = () => {\r\n    const firstChannel = this.state.channels[0];\r\n    if (this.state.firstLoad && this.state.channels.length > 0) {\r\n      this.props.setCurrentChannel(firstChannel);\r\n      this.activeChannel(firstChannel);\r\n      this.setState({ channel: firstChannel });\r\n    }\r\n    this.setState({ firstLoad: false });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.removeListener();\r\n  }\r\n\r\n  removeListener = () => {\r\n    this.state.channelRef.off();\r\n  };\r\n\r\n  closeModal = () => this.setState({ modal: false });\r\n  openModal = () => this.setState({ modal: true });\r\n\r\n  addChannel = () => {\r\n    const { channelRef, channelDetails, channelName, user } = this.state;\r\n\r\n    const key = channelRef.push().key;\r\n\r\n    const newChannel = {\r\n      id: key,\r\n      name: channelName,\r\n      details: channelDetails,\r\n\r\n      createdBy: {\r\n        name: user?.displayName,\r\n        avatar: user?.photoURL,\r\n      },\r\n    };\r\n\r\n    channelRef\r\n      .child(key)\r\n      .update(newChannel)\r\n      .then(() => {\r\n        this.setState({ channelName: \"\", channelDetails: \"\" });\r\n        this.closeModal();\r\n        console.log(\"channel added\");\r\n      })\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  displayErrors = (errors) =>\r\n    errors.map((error, i) => <p key={i}>{error.message}</p>);\r\n\r\n  handleInputError = (errors, inputName) => {\r\n    return errors.some((error) =>\r\n      error.message.toLowerCase().includes(inputName)\r\n    )\r\n      ? \"error\"\r\n      : \"\";\r\n  };\r\n\r\n  isFormValid = () => {\r\n    let errors = [];\r\n    let error;\r\n\r\n    if (this.isFormEmpty(this.state)) {\r\n      error = { message: \"Fill in all fields\" };\r\n      this.setState({ errors: errors.concat(error) });\r\n      return false;\r\n    } else {\r\n      this.setState({ errors: [] });\r\n      return true;\r\n    }\r\n  };\r\n\r\n  isFormEmpty = ({ channelName, channelDetails }) =>\r\n    channelName && channelDetails;\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (this.isFormValid(this.state)) {\r\n      this.setState({ errors: [] });\r\n      this.addChannel();\r\n    }\r\n  };\r\n\r\n  changeChannel = (channel) => {\r\n    this.activeChannel(channel);\r\n    this.state.typingRef\r\n      .child(this.state.channel?.id)\r\n      .child(this.state.user?.uid)\r\n      .remove();\r\n    this.clearNotifications();\r\n    this.props.setCurrentChannel(channel);\r\n    this.props.setPrivateChannel(false);\r\n    this.setState({ channel });\r\n  };\r\n\r\n  clearNotifications = () => {\r\n    let index = this.state.notifications.findIndex(\r\n      (notification) => notification.id === this.state.channel.id\r\n    );\r\n\r\n    if (index !== -1) {\r\n      let updatedNotification = [...this.state.notifications];\r\n      updatedNotification[index].total = this.state.notifications[\r\n        index\r\n      ].lastKnownTotal;\r\n      updatedNotification[index].count = 0;\r\n      this.setState({ notifications: updatedNotification });\r\n    }\r\n  };\r\n\r\n  activeChannel = (channels) => {\r\n    this.setState({ activeChannel: channels.id });\r\n  };\r\n\r\n  displayChannel = (channels) =>\r\n    channels.length > 0 &&\r\n    channels.map((channel) => (\r\n      <Menu.Item\r\n        key={channel.id}\r\n        onClick={() => this.changeChannel(channel)}\r\n        name={channel.name}\r\n        style={{ opacity: 0.8 }}\r\n        active={channel.id === this.state.activeChannel}\r\n      >\r\n        {this.getNotificationCount(channel) && (\r\n          <Label color=\"red\">{this.getNotificationCount(channel)}</Label>\r\n        )}\r\n        <motion.div\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          transition={{ delay: 2 }}\r\n        >\r\n          # {channel.name}\r\n        </motion.div>\r\n      </Menu.Item>\r\n    ));\r\n\r\n  getNotificationCount = (channel) => {\r\n    let count = 0;\r\n\r\n    this.state.notifications.forEach((notification) => {\r\n      if (channel.id === notification.id) {\r\n        count = notification.count;\r\n      }\r\n    });\r\n\r\n    if (count > 0) return count;\r\n  };\r\n\r\n  render() {\r\n    const { channels, modal, channelDetails, channelName, errors } = this.state;\r\n    return (\r\n      <>\r\n        <Menu.Menu className=\"menu\">\r\n          <motion.div\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            transition={{ delay: 1.7 }}\r\n          >\r\n            <Menu.Item>\r\n              <span>\r\n                <Icon name=\"exchange\" />\r\n                CHANNELS\r\n              </span>{\" \"}\r\n              ({channels.length})\r\n              <Icon name=\"add\" onClick={this.openModal} />\r\n            </Menu.Item>\r\n          </motion.div>\r\n\r\n          {this.displayChannel(channels)}\r\n\r\n          <Modal basic open={modal} onClose={this.closeModal}>\r\n            <Modal.Header>Add a Channel</Modal.Header>\r\n            <Modal.Content>\r\n              <Form onClick={this.handleSubmit}>\r\n                <Form.Field>\r\n                  <Input\r\n                    fluid\r\n                    label=\"Channel Name\"\r\n                    name=\"channelName\"\r\n                    onChange={this.handleChange}\r\n                    className={this.handleInputError(errors, \"channelName\")}\r\n                    value={channelName}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <Input\r\n                    fluid\r\n                    label=\"About the Channel\"\r\n                    name=\"channelDetails\"\r\n                    onChange={this.handleChange}\r\n                    className={this.handleInputError(errors, \"channelDetails\")}\r\n                    value={channelDetails}\r\n                  />\r\n                </Form.Field>\r\n              </Form>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n              <Button color=\"green\" inverted onClick={this.handleSubmit}>\r\n                <Icon name=\"checkmark\" />\r\n                Add\r\n              </Button>\r\n              <Button color=\"red\" inverted onClick={this.closeModal}>\r\n                <Icon name=\"remove\" />\r\n                Cancel\r\n              </Button>\r\n            </Modal.Actions>\r\n            {errors.length > 0 && (\r\n              <Message error>{this.displayErrors(errors)}</Message>\r\n            )}\r\n          </Modal>\r\n        </Menu.Menu>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { setCurrentChannel, setPrivateChannel })(Channel);\r\n","import React from \"react\";\r\nimport firebase from \"../../firebase\";\r\nimport { connect } from \"react-redux\";\r\nimport { setCurrentChannel, setPrivateChannel } from \"../../actions\";\r\nimport { Menu, Icon } from \"semantic-ui-react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nclass DirectMessages extends React.Component {\r\n  state = {\r\n    activeChannel: \"\",\r\n    user: this.props.currentUser,\r\n    users: [],\r\n    usersRef: firebase.database().ref(\"users\"),\r\n    connectedRef: firebase.database().ref(\".info/connected\"),\r\n    presenceRef: firebase.database().ref(\"presence\"),\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.state.user) {\r\n      this.addListeners(this.state.user?.uid);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.removeListeners();\r\n  }\r\n\r\n  removeListeners = () => {\r\n    this.state.usersRef.off();\r\n    this.state.connectedRef.off();\r\n    this.state.presenceRef.off();\r\n  };\r\n\r\n  addListeners = (currentUserUid) => {\r\n    let loadedUsers = [];\r\n    this.state.usersRef.on(\"child_added\", (snap) => {\r\n      if (currentUserUid !== snap.key) {\r\n        let user = snap.val();\r\n        user[\"uid\"] = snap.key;\r\n        user[\"status\"] = \"offline\";\r\n        loadedUsers.push(user);\r\n        this.setState({ users: loadedUsers });\r\n      }\r\n    });\r\n\r\n    this.state.connectedRef.on(\"value\", (snap) => {\r\n      if (snap.val() === true) {\r\n        const ref = this.state.presenceRef.child(currentUserUid);\r\n        ref.set(true);\r\n        ref.onDisconnect().remove((err) => {\r\n          if (err !== null) {\r\n            console.error(err);\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    this.state.presenceRef.on(\"child_added\", (snap) => {\r\n      if (currentUserUid !== snap.key) {\r\n        this.addStatusToUser(snap.key);\r\n      }\r\n    });\r\n\r\n    this.state.presenceRef.on(\"child_removed\", (snap) => {\r\n      if (currentUserUid !== snap.key) {\r\n        this.addStatusToUser(snap.key, false);\r\n      }\r\n    });\r\n  };\r\n\r\n  addStatusToUser = (userId, connected = true) => {\r\n    const updatedUsers = this.state.users.reduce((acc, user) => {\r\n      if (user.uid === userId) {\r\n        user[\"status\"] = `${connected ? \"online\" : \"offline\"}`;\r\n      }\r\n      return acc.concat(user);\r\n    }, []);\r\n    this.setState({ users: updatedUsers });\r\n  };\r\n\r\n  isUserOnline = (user) => user.status === \"online\";\r\n\r\n  changeChannel = (user) => {\r\n    const channelId = this.getChannelId(user?.uid);\r\n    const channelData = {\r\n      id: channelId,\r\n      name: user?.name,\r\n    };\r\n    this.props.setCurrentChannel(channelData);\r\n    this.props.setPrivateChannel(true);\r\n    this.setActiveChannel(user?.uid);\r\n  };\r\n\r\n  getChannelId = (userId) => {\r\n    const currentUserId = this.state.user?.uid;\r\n    return userId < currentUserId\r\n      ? `${userId}/${currentUserId}`\r\n      : `${currentUserId}/${userId}`;\r\n  };\r\n\r\n  setActiveChannel = (userId) => {\r\n    this.setState({ activeChannel: userId });\r\n  };\r\n\r\n  render() {\r\n    const { users, activeChannel } = this.state;\r\n\r\n    return (\r\n      <Menu.Menu className=\"menu\">\r\n        <Menu.Item>\r\n          <motion.div\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            transition={{ delay: 1.7 }}\r\n          >\r\n            <span>\r\n              <Icon name=\"mail\" /> DIRECT MESSAGES\r\n            </span>{\" \"}\r\n            ({users.length})\r\n          </motion.div>\r\n        </Menu.Item>\r\n        {users.map((user) => (\r\n          <Menu.Item\r\n            key={user.uid}\r\n            active={user?.uid === activeChannel}\r\n            onClick={() => this.changeChannel(user)}\r\n            style={{ opacity: 0.7, fontStyle: \"italic\" }}\r\n          >\r\n            <Icon\r\n              name=\"circle\"\r\n              color={this.isUserOnline(user) ? \"green\" : \"red\"}\r\n            />\r\n            <motion.div\r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 1 }}\r\n              transition={{ delay: 2 }}\r\n            >\r\n              @ {user?.name}\r\n            </motion.div>\r\n          </Menu.Item>\r\n        ))}\r\n      </Menu.Menu>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { setCurrentChannel, setPrivateChannel })(\r\n  DirectMessages\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setCurrentChannel, setPrivateChannel } from \"../../actions\";\r\nimport { Menu, Icon } from \"semantic-ui-react\";\r\nimport firebase from \"../../firebase\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nclass Starred extends Component {\r\n  state = {\r\n    activeChannel: \"\",\r\n    starredChannels: [],\r\n    user: this.props.currentUser,\r\n    usersRef: firebase.database().ref(\"users\"),\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.state.user) {\r\n      this.addListener(this.state.user.uid);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.removeListener();\r\n  }\r\n\r\n  removeListener = () => {\r\n    this.state.usersRef.child(`${this.state.user?.uid}/starred`).off();\r\n  };\r\n\r\n  addListener = (userId) => {\r\n    this.state.usersRef\r\n      .child(userId)\r\n      .child(\"starred\")\r\n      .on(\"child_added\", (snap) => {\r\n        const starredChannel = { id: snap.key, ...snap.val() };\r\n        this.setState({\r\n          starredChannels: [...this.state.starredChannels, starredChannel],\r\n        });\r\n      });\r\n\r\n    this.state.usersRef\r\n      .child(userId)\r\n      .child(\"starred\")\r\n      .on(\"child_removed\", (snap) => {\r\n        const channelToRemove = { id: snap.key, ...snap.val() };\r\n        const filteredChannel = this.state.starredChannels.filter((channel) => {\r\n          return channel.id !== channelToRemove.id;\r\n        });\r\n        this.setState({ starredChannels: filteredChannel });\r\n      });\r\n  };\r\n\r\n  changeChannel = (channel) => {\r\n    this.activeChannel(channel);\r\n    this.props.setCurrentChannel(channel);\r\n    this.props.setPrivateChannel(false);\r\n  };\r\n\r\n  activeChannel = (channels) => {\r\n    this.setState({ activeChannel: channels.id });\r\n  };\r\n\r\n  displayChannel = (starredChannels) =>\r\n    starredChannels.length > 0 &&\r\n    starredChannels.map((channel) => (\r\n      <Menu.Item\r\n        key={channel.id}\r\n        onClick={() => this.changeChannel(channel)}\r\n        name={channel.name}\r\n        style={{ opacity: 0.8 }}\r\n        active={channel.id === this.state.activeChannel}\r\n      >\r\n        <motion.div\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          transition={{ delay: 2 }}\r\n        >\r\n          # {channel.name}\r\n        </motion.div>\r\n      </Menu.Item>\r\n    ));\r\n\r\n  render() {\r\n    const { starredChannels } = this.state;\r\n\r\n    return (\r\n      <Menu.Menu className=\"menu\">\r\n        <Menu.Item>\r\n          <motion.div\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            transition={{ delay: 1.7 }}\r\n          >\r\n            <span>\r\n              <Icon name=\"star\" />\r\n              STARRED\r\n            </span>{\" \"}\r\n            ({starredChannels.length})\r\n          </motion.div>\r\n        </Menu.Item>\r\n        {this.displayChannel(starredChannels)}\r\n      </Menu.Menu>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { setPrivateChannel, setCurrentChannel })(Starred);\r\n","import React from \"react\";\r\nimport { Menu } from \"semantic-ui-react\";\r\nimport UserPanel from \"./UserPanel\";\r\nimport Channel from \"./Channel\";\r\nimport DirectMessage from \"./DirectMessage\";\r\nimport Starred from \"./Starred\";\r\n\r\nclass SidePanel extends React.Component {\r\n  render() {\r\n    const { currentUser, primaryColor, currentChannel } = this.props;\r\n\r\n    return (\r\n      <Menu\r\n        size=\"large\"\r\n        inverted\r\n        fixed=\"left\"\r\n        vertical\r\n        style={{ background: primaryColor, fontSize: \"1.2rem\" }}\r\n      >\r\n        <UserPanel\r\n          primaryColor={primaryColor}\r\n          currentUser={currentUser}\r\n          currentChannel={currentChannel}\r\n        />\r\n        <Starred currentUser={currentUser} />\r\n        <Channel currentUser={currentUser} />\r\n        <DirectMessage currentUser={currentUser} />\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SidePanel;\r\n","import { motion } from \"framer-motion\";\r\nimport React, { Component } from \"react\";\r\nimport { Header, Segment, Icon, Input } from \"semantic-ui-react\";\r\n\r\nclass MessagesHeader extends Component {\r\n  render() {\r\n    const {\r\n      channelName,\r\n      numUniqueUsers,\r\n      handleSearchChange,\r\n      searchLoading,\r\n      isPrivateChannel,\r\n      handleStar,\r\n      isChannelStarred,\r\n    } = this.props;\r\n\r\n    return (\r\n      <Segment clearing>\r\n        <motion.div\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          transition={{ delay: 0.5 }}\r\n        >\r\n          <Header\r\n            fluid=\"true\"\r\n            as=\"h2\"\r\n            floated=\"left\"\r\n            style={{ marginBottom: 0 }}\r\n          >\r\n            <span>\r\n              {channelName}\r\n              {!isPrivateChannel && (\r\n                <Icon\r\n                  onClick={handleStar}\r\n                  name={isChannelStarred ? \"star\" : \"star outline\"}\r\n                  color={isChannelStarred ? \"yellow\" : \"black\"}\r\n                />\r\n              )}\r\n            </span>\r\n            <Header.Subheader> {numUniqueUsers}</Header.Subheader>\r\n          </Header>\r\n        </motion.div>\r\n        <motion.div\r\n          whileTap={{\r\n            scale: 1.08,\r\n          }}\r\n        >\r\n          <Header floated=\"right\">\r\n            <Input\r\n              loading={searchLoading}\r\n              size=\"mini\"\r\n              icon=\"search\"\r\n              name=\"searchTerm\"\r\n              placeholder=\"Search Messages\"\r\n              onChange={handleSearchChange}\r\n            />\r\n          </Header>\r\n        </motion.div>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MessagesHeader;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Input, Button, Icon } from \"semantic-ui-react\";\r\nimport mime from \"mime-types\";\r\n\r\nclass FileModal extends Component {\r\n  state = {\r\n    file: null,\r\n    authorized: [\"image/jpeg\", \"image/png\"],\r\n  };\r\n\r\n  addFile = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      this.setState({ file });\r\n    }\r\n  };\r\n\r\n  sendFile = () => {\r\n    const { file } = this.state;\r\n    const { uploadFile, closeModal } = this.props;\r\n\r\n    if (file !== null) {\r\n      if (this.isAuthorized(file.name)) {\r\n        const metadata = { contentType: mime.lookup(file.name) };\r\n        uploadFile(file, metadata);\r\n        closeModal();\r\n        this.clearFile();\r\n      }\r\n    }\r\n  };\r\n\r\n  isAuthorized = (fileName) =>\r\n    this.state.authorized.includes(mime.lookup(fileName));\r\n\r\n  clearFile = () => this.setState({ files: null });\r\n\r\n  render() {\r\n    const { modal, closeModal } = this.props;\r\n\r\n    return (\r\n      <Modal basic open={modal} onClose={closeModal}>\r\n        <Modal.Header> Select an Image File </Modal.Header>\r\n        <Modal.Content>\r\n          <Input\r\n            onChange={this.addFile}\r\n            fluid\r\n            type=\"file\"\r\n            name=\"file\"\r\n            label=\"File types:jpg,png\"\r\n          />\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button onClick={this.sendFile} color=\"green\" inverted>\r\n            <Icon name=\"checkmark\" /> Send\r\n          </Button>\r\n          <Button color=\"red\" inverted onClick={closeModal}>\r\n            <Icon name=\"remove\" /> Cancel\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FileModal;\r\n","import React from \"react\";\r\nimport { Progress } from \"semantic-ui-react\";\r\n\r\nconst ProgressBar = ({ uploadState, percentUploaded }) => {\r\n  return (\r\n    uploadState === \"uploading\" && (\r\n      <Progress\r\n        className=\"progress__bar\"\r\n        percent={percentUploaded}\r\n        progress\r\n        indicating\r\n        size=\"medium\"\r\n        inverted\r\n      />\r\n    )\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n","import React, { Component } from \"react\";\r\nimport { Segment, Input, Button } from \"semantic-ui-react\";\r\nimport firebase from \"../../firebase\";\r\nimport FileModal from \"./FileModal\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport ProgressBar from \"./ProgressBar\";\r\nimport { Picker, emojiIndex } from \"emoji-mart\";\r\nimport \"emoji-mart/css/emoji-mart.css\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nclass MessageForm extends Component {\r\n  state = {\r\n    message: \"\",\r\n    channel: this.props.currentChannel,\r\n    user: this.props.currentUser,\r\n    loading: false,\r\n    modal: false,\r\n    errors: [],\r\n    uploadState: \"\",\r\n    uploadTask: null,\r\n    percentUploaded: 0,\r\n    storageRef: firebase.storage().ref(),\r\n    typingRef: firebase.database().ref(\"typing\"),\r\n    emojiPicker: false,\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    if (this.state.uploadTask !== null) {\r\n      this.state.uploadTask.cancel();\r\n      this.setState({ uploadTask: null });\r\n    }\r\n  }\r\n\r\n  openModal = () => {\r\n    this.setState({ modal: true });\r\n  };\r\n  closeModal = () => {\r\n    this.setState({ modal: false });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  createMessage = (fileUrl = null) => {\r\n    const message = {\r\n      timestamp: firebase.database.ServerValue.TIMESTAMP,\r\n      user: {\r\n        id: this.state.user?.uid,\r\n        name: this.state.user?.displayName,\r\n        avatar: this.state.user?.photoURL,\r\n      },\r\n    };\r\n    if (fileUrl !== null) {\r\n      message[\"image\"] = fileUrl;\r\n    } else {\r\n      message[\"content\"] = this.state.message;\r\n    }\r\n    return message;\r\n  };\r\n\r\n  sendMessage = () => {\r\n    const { getMessagesRef } = this.props;\r\n    const { message, channel, typingRef, user } = this.state;\r\n\r\n    if (message) {\r\n      this.setState({ loading: true });\r\n\r\n      getMessagesRef()\r\n        .child(channel?.id)\r\n        .push()\r\n        .set(this.createMessage())\r\n        .then(() => {\r\n          this.setState({ loading: false, message: \"\", errors: [] });\r\n          typingRef.child(channel?.id).child(user?.uid).remove();\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n          this.setState({\r\n            loading: false,\r\n            errors: this.state.errors.concat(err),\r\n          });\r\n        });\r\n    } else {\r\n      this.setState({\r\n        errors: this.state.errors.concat({ message: \"Add a Message\" }),\r\n      });\r\n    }\r\n  };\r\n\r\n  getPath = () => {\r\n    if (this.props.isPrivateChannel) {\r\n      return `chat/private/${this.state.channel.id}`;\r\n    } else {\r\n      return `chat/public`;\r\n    }\r\n  };\r\n\r\n  uploadFile = (file, metadata) => {\r\n    const pathToUpload = this.state.channel.id;\r\n    const ref = this.props.getMessagesRef();\r\n    const filePath = `${this.getPath()}/${uuidv4()}.jpg`;\r\n\r\n    this.setState(\r\n      {\r\n        uploadState: \"uploading\",\r\n        uploadTask: this.state.storageRef.child(filePath).put(file, metadata),\r\n      },\r\n      () => {\r\n        this.state.uploadTask.on(\r\n          \"state_changed\",\r\n          (snap) => {\r\n            const percentUploaded = Math.round(\r\n              (snap.bytesTransferred / snap.totalBytes) * 100\r\n            );\r\n            this.setState({ percentUploaded });\r\n          },\r\n          (err) => {\r\n            console.error(err);\r\n            this.setState({\r\n              errors: this.state.errors.concat(err),\r\n              uploadState: \"error\",\r\n              uploadTask: null,\r\n            });\r\n          },\r\n          () => {\r\n            this.state.uploadTask.snapshot.ref\r\n              .getDownloadURL()\r\n              .then((downloadUrl) => {\r\n                this.sendFileMessage(downloadUrl, ref, pathToUpload);\r\n              })\r\n              .catch((err) => {\r\n                console.error(err);\r\n                this.setState({\r\n                  errors: this.state.errors.concat(err),\r\n                  uploadState: \"error\",\r\n                  uploadTask: null,\r\n                });\r\n              });\r\n          }\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  sendFileMessage = (fileUrl, ref, pathToUpload) => {\r\n    ref\r\n      .child(pathToUpload)\r\n      .push()\r\n      .set(this.createMessage(fileUrl))\r\n      .then(() => {\r\n        this.setState({ uploadState: \"done\" });\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        this.setState({\r\n          errors: this.state.errors.concat(err),\r\n        });\r\n      });\r\n  };\r\n\r\n  handleKeyDown = () => {\r\n    const { message, typingRef, channel, user } = this.state;\r\n\r\n    if (message) {\r\n      typingRef.child(channel?.id).child(user?.uid).set(user?.displayName);\r\n    } else {\r\n      typingRef.child(channel?.id).child(user?.uid).remove();\r\n    }\r\n  };\r\n\r\n  handleTogglePicker = () => {\r\n    this.setState({ emojiPicker: !this.state.emojiPicker });\r\n  };\r\n\r\n  colonToUnicode = (message) => {\r\n    return message.replace(/:[A-Za-z0-9_+-]+:/g, (x) => {\r\n      x = x.replace(/:/g, \"\");\r\n      let emoji = emojiIndex.emojis[x];\r\n      if (typeof emoji !== \"undefined\") {\r\n        let unicode = emoji.native;\r\n        if (typeof unicode !== \"undefined\") {\r\n          return unicode;\r\n        }\r\n      }\r\n      x = \":\" + x + \":\";\r\n      return x;\r\n    });\r\n  };\r\n\r\n  handleAddEmoji = (emoji) => {\r\n    const oldMessage = this.state.message;\r\n    const newMessage = this.colonToUnicode(` ${oldMessage} ${emoji.colons} `);\r\n    this.setState({ message: newMessage, emojiPicker: false });\r\n    setTimeout(() => {\r\n      this.messageInputRef.focus();\r\n    }, 0);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      errors,\r\n      message,\r\n      loading,\r\n      modal,\r\n      uploadState,\r\n      percentUploaded,\r\n      emojiPicker,\r\n    } = this.state;\r\n    return (\r\n      <Segment className=\"message__form\">\r\n        {emojiPicker && (\r\n          <Picker\r\n            set=\"google\"\r\n            theme=\"dark\"\r\n            onSelect={this.handleAddEmoji}\r\n            className=\"emojipicker\"\r\n            title=\"Pick your Emoji\"\r\n            emoji=\"point_up\"\r\n          />\r\n        )}\r\n        <motion.div\r\n          whileTap={{\r\n            scale: 1.02,\r\n          }}\r\n        >\r\n          <Input\r\n            fluid\r\n            name=\"message\"\r\n            onKeyDown={this.handleKeyDown}\r\n            ref={(node) => (this.messageInputRef = node)}\r\n            label={\r\n              <Button\r\n                icon={emojiPicker ? \"close\" : \"add\"}\r\n                content={emojiPicker ? \"Close\" : null}\r\n                onClick={this.handleTogglePicker}\r\n              />\r\n            }\r\n            labelPosition=\"left\"\r\n            value={message}\r\n            placeholder=\"write your message\"\r\n            style={{ marginBottom: \"0.8em\" }}\r\n            onChange={this.handleChange}\r\n            className={\r\n              errors.some((error) => error.message.includes(\"message\"))\r\n                ? \"error\"\r\n                : \"\"\r\n            }\r\n          />\r\n        </motion.div>\r\n        <Button.Group icon widths=\"2\">\r\n          <Button\r\n            color=\"orange\"\r\n            content=\"Add Reply\"\r\n            labelPosition=\"left\"\r\n            icon=\"edit\"\r\n            disabled={loading}\r\n            onClick={this.sendMessage}\r\n          />\r\n\r\n          <Button\r\n            color=\"teal\"\r\n            content=\"Upload Media\"\r\n            disabled={uploadState === \"uploading\"}\r\n            labelPosition=\"left\"\r\n            icon=\"cloud upload\"\r\n            onClick={this.openModal}\r\n          />\r\n        </Button.Group>\r\n\r\n        <FileModal\r\n          modal={modal}\r\n          closeModal={this.closeModal}\r\n          uploadFile={this.uploadFile}\r\n        />\r\n        <ProgressBar\r\n          uploadState={uploadState}\r\n          percentUploaded={percentUploaded}\r\n        />\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MessageForm;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { Comment, Image } from \"semantic-ui-react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst isOwnMessage = (message, user) => {\r\n  return message.user.id === user.uid ? \"message__self\" : \"\";\r\n};\r\n\r\nconst isImage = (message) => {\r\n  return message.hasOwnProperty(\"image\") && !message.hasOwnProperty(\"content\");\r\n};\r\n\r\nconst timeFromNow = (timestamp) => moment(timestamp).fromNow();\r\n\r\nconst Message = ({ message, user }) => (\r\n  <motion.div\r\n    initial={{ opacity: 0 }}\r\n    animate={{ opacity: 1 }}\r\n    transition={{ delay: 0.5, type: \"tween\" }}\r\n  >\r\n    <Comment>\r\n      <Comment.Avatar src={message.user?.avatar} />\r\n      <Comment.Content className={isOwnMessage(message, user)}>\r\n        <Comment.Author as=\"a\">{message.user?.name}</Comment.Author>\r\n        <Comment.Metadata>{timeFromNow(message.timestamp)}</Comment.Metadata>\r\n        {isImage(message) ? (\r\n          <Image src={message.image} className=\"message__image\" />\r\n        ) : (\r\n          <Comment.Text>{message.content}</Comment.Text>\r\n        )}\r\n      </Comment.Content>\r\n    </Comment>\r\n  </motion.div>\r\n);\r\n\r\nexport default Message;\r\n","import React from 'react'\r\n\r\nconst Typing = () => {\r\n    return (\r\n        <div className=\"typing\">\r\n            <div className=\"typing__dot\"></div>\r\n            <div className=\"typing__dot\"></div>\r\n            <div className=\"typing__dot\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Typing\r\n","import React from \"react\";\r\n\r\nconst Skeleton = () => {\r\n  return (\r\n    <div className=\"skeleton\">\r\n      <div className=\"skeleton__avatar\"> </div>\r\n      <div className=\"skeleton__author\"> </div>\r\n      <div className=\"skeleton__details\"> </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Skeleton;\r\n","import React from \"react\";\r\nimport { Segment, Comment } from \"semantic-ui-react\";\r\nimport MessagesHeader from \"./MessagesHeader\";\r\nimport MessageForm from \"./MessageForm\";\r\nimport \"./MessageForm\";\r\nimport firebase from \"../../firebase\";\r\nimport Message from \"./Message\";\r\nimport { connect } from \"react-redux\";\r\nimport { setUserPosts } from \"../../actions\";\r\nimport Typing from \"./Typing\";\r\nimport Skeleton from \"./Skeleton\";\r\n\r\nclass Messages extends React.Component {\r\n  state = {\r\n    messagesRef: firebase.database().ref(\"messages\"),\r\n    usersRef: firebase.database().ref(\"users\"),\r\n    privateMessagesRef: firebase.database().ref(\"privateMessages\"),\r\n    privateChannel: this.props.isPrivateChannel,\r\n    channel: this.props.currentChannel,\r\n    user: this.props.currentUser,\r\n    messages: [],\r\n    messagesLoading: true,\r\n    numUniqueUsers: \"\",\r\n    searchTerm: \"\",\r\n    isChannelStarred: false,\r\n    searchLoading: false,\r\n    searchResults: [],\r\n    typingUsers: [],\r\n    listeners: [],\r\n    typingRef: firebase.database().ref(\"typing\"),\r\n    connectedRef: firebase.database().ref(\".info/connected\"),\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.messageEnd) {\r\n      this.scrollToBottom();\r\n    }\r\n  }\r\n\r\n  scrollToBottom = () => {\r\n    this.messageEnd.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { channel, user, listeners } = this.state;\r\n\r\n    if (channel && user) {\r\n      this.removeListeners(listeners);\r\n      this.addListeners(channel?.id);\r\n      this.addUserStarsListener(channel?.id, user?.uid);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.removeListeners(this.state.listeners);\r\n    this.state.connectedRef.off();\r\n  }\r\n\r\n  removeListeners = (listener) => {\r\n    listener.forEach((listener) => {\r\n      listener.ref.child(listener.id).off(listener.event);\r\n    });\r\n  };\r\n\r\n  addToListeners = (id, ref, event) => {\r\n    const index = this.state.listeners.findIndex((listeners) => {\r\n      return (\r\n        listeners.id === id &&\r\n        listeners.ref === ref &&\r\n        listeners.event === event\r\n      );\r\n    });\r\n\r\n    if (index !== -1) {\r\n      const newListeners = { id, ref, event };\r\n      this.setState({ listeners: this.state.listeners.concat(newListeners) });\r\n    }\r\n  };\r\n\r\n  addListeners = (channelId) => {\r\n    this.addMessageListener(channelId);\r\n    this.addTypingListener(channelId);\r\n  };\r\n\r\n  addTypingListener = (channelId) => {\r\n    let typingUsers = [];\r\n\r\n    this.state.typingRef.child(channelId).on(\"child_added\", (snap) => {\r\n      if (snap.key !== this.state.user?.uid) {\r\n        typingUsers = typingUsers.concat({\r\n          id: snap.key,\r\n          name: snap.val(),\r\n        });\r\n        this.setState({ typingUsers });\r\n      }\r\n    });\r\n    this.addToListeners(channelId, this.state.typingRef, \"child_added\");\r\n\r\n    this.state.typingRef.child(channelId).on(\"child_removed\", (snap) => {\r\n      const index = typingUsers.findIndex((user) => snap.key === user.uid);\r\n      if (index !== -1) {\r\n        typingUsers = typingUsers.filter((user) => user.id !== snap.key);\r\n        this.setState({ typingUsers });\r\n      }\r\n    });\r\n    this.addToListeners(channelId, this.state.typingRef, \"child_removed\");\r\n\r\n    this.state.connectedRef.on(\"value\", (snap) => {\r\n      if (snap.val() === true) {\r\n        this.state.typingRef\r\n          .child(channelId)\r\n          .child(this.state.user?.uid)\r\n          .onDisconnect()\r\n          .remove((err) => {\r\n            if (err !== null) console.error(err);\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  addMessageListener = (channelId) => {\r\n    let loadedMessages = [];\r\n    const ref = this.getMessagesRef();\r\n\r\n    ref.child(channelId).on(\"child_added\", (snap) => {\r\n      loadedMessages.push(snap.val());\r\n      this.setState({\r\n        messages: loadedMessages,\r\n        messagesLoading: false,\r\n      });\r\n      this.countUniqueUsers(loadedMessages);\r\n      this.countUserPosts(loadedMessages);\r\n    });\r\n    this.addToListeners(channelId, ref, \"child_added\");\r\n  };\r\n\r\n  getMessagesRef = () => {\r\n    const { privateChannel, messagesRef, privateMessagesRef } = this.state;\r\n\r\n    return privateChannel ? privateMessagesRef : messagesRef;\r\n  };\r\n\r\n  countUniqueUsers = (message) => {\r\n    const uniqueUsers = message.reduce((acc, message) => {\r\n      if (!acc.includes(message.user.id)) {\r\n        acc.push(message.user.id);\r\n      }\r\n      return acc;\r\n    }, []);\r\n    const plural = uniqueUsers.length > 1 || uniqueUsers.length === 0;\r\n    const numUniqueUsers = `${uniqueUsers.length} User${plural ? \"s\" : \"\"}`;\r\n    this.setState({ numUniqueUsers });\r\n  };\r\n\r\n  countUserPosts = (message) => {\r\n    const userPosts = message.reduce((acc, message) => {\r\n      if (message.user.id in acc) {\r\n        acc[message.user.id].count += 1;\r\n      } else {\r\n        acc[message.user.id] = {\r\n          avatar: message.user.avatar,\r\n          count: 1,\r\n          name: message.user.name,\r\n        };\r\n      }\r\n      return acc;\r\n    }, {});\r\n    this.props.setUserPosts(userPosts);\r\n  };\r\n\r\n  handleSearchChange = (e) => {\r\n    this.setState(\r\n      {\r\n        searchTerm: e.target.value,\r\n        searchLoading: true,\r\n      },\r\n      () => this.handleSearchMessages()\r\n    );\r\n  };\r\n\r\n  handleSearchMessages = () => {\r\n    const channelMessages = [...this.state.messages];\r\n    const regex = new RegExp(this.state.searchTerm, \"gi\");\r\n    const searchResults = channelMessages.reduce((acc, message) => {\r\n      if (\r\n        (message.content && message.content.match(regex)) ||\r\n        message.user.name.match(regex)\r\n      ) {\r\n        acc.push(message);\r\n      }\r\n      return acc;\r\n    }, []);\r\n    this.setState({ searchResults });\r\n    setTimeout(() => this.setState({ searchLoading: false }), 1000);\r\n  };\r\n\r\n  displayMessages = (messages) =>\r\n    messages.length > 0 &&\r\n    messages.map((message) => (\r\n      <Message\r\n        key={message.timestamp}\r\n        message={message}\r\n        user={this.state.user}\r\n      />\r\n    ));\r\n\r\n  displayChannelName = (channel) => {\r\n    return channel\r\n      ? `${this.state.privateChannel ? \"@\" : \"#\"}${channel.name}`\r\n      : \"\";\r\n  };\r\n\r\n  handleStar = () => {\r\n    this.setState(\r\n      (prevState) => ({\r\n        isChannelStarred: !prevState.isChannelStarred,\r\n      }),\r\n      () => this.starChannel()\r\n    );\r\n  };\r\n\r\n  starChannel = () => {\r\n    if (this.state.isChannelStarred) {\r\n      this.state.usersRef.child(`${this.state.user?.uid}/starred`).update({\r\n        [this.state.channel.id]: {\r\n          name: this.state.channel.name,\r\n          details: this.state.channel.details,\r\n\r\n          createdBy: {\r\n            name: this.state.channel.createdBy.name,\r\n            avatar: this.state.channel.createdBy.avatar,\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      this.state.usersRef\r\n        .child(`${this.state.user?.uid}/starred`)\r\n        .child(this.state.channel.id)\r\n        .remove((err) => {\r\n          if (err !== null) console.error(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  addUserStarsListener = (channelId, userId) => {\r\n    this.state.usersRef\r\n      .child(userId)\r\n      .child(\"starred\")\r\n      .once(\"value\")\r\n      .then((data) => {\r\n        if (data.val() !== null) {\r\n          const channelIds = Object.keys(data.val());\r\n          const prevStarred = channelIds.includes(channelId);\r\n          this.setState({ isChannelStarred: prevStarred });\r\n        }\r\n      });\r\n  };\r\n\r\n  displayTypingUsers = (users) =>\r\n    users.length > 0 &&\r\n    users.map((user) => (\r\n      <div\r\n        style={{ display: \"flex\", alignItems: \"center\", marginBottom: \"0.2em\" }}\r\n        key={user.id}\r\n      >\r\n        <span className=\"user__typing\">{user?.name} is typing </span> <Typing />\r\n      </div>\r\n    ));\r\n\r\n  displayMessagesSkeleton = (loading) =>\r\n    loading ? (\r\n      <>\r\n        {[...Array(10)].map((_, i) => (\r\n          <Skeleton key={i} />\r\n        ))}\r\n      </>\r\n    ) : null;\r\n\r\n  render() {\r\n    const {\r\n      messagesRef,\r\n      messages,\r\n      channel,\r\n      user,\r\n      numUniqueUsers,\r\n      searchResults,\r\n      searchTerm,\r\n      searchLoading,\r\n      privateChannel,\r\n      isChannelStarred,\r\n      typingUsers,\r\n      messagesLoading,\r\n    } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <MessagesHeader\r\n          channelName={this.displayChannelName(channel)}\r\n          numUniqueUsers={numUniqueUsers}\r\n          handleSearchChange={this.handleSearchChange}\r\n          searchLoading={searchLoading}\r\n          isPrivateChannel={privateChannel}\r\n          isChannelStarred={isChannelStarred}\r\n          handleStar={this.handleStar}\r\n          handleChange={this.handleChange}\r\n        />\r\n        <Segment>\r\n          <Comment.Group className=\"messages\">\r\n            {this.displayMessagesSkeleton(messagesLoading)}\r\n            {searchTerm\r\n              ? this.displayMessages(searchResults)\r\n              : this.displayMessages(messages)}\r\n            {this.displayTypingUsers(typingUsers)}\r\n            <div ref={(node) => (this.messageEnd = node)} />\r\n          </Comment.Group>\r\n        </Segment>\r\n\r\n        <MessageForm\r\n          messagesRef={messagesRef}\r\n          currentChannel={channel}\r\n          currentUser={user}\r\n          isPrivateChannel={privateChannel}\r\n          getMessagesRef={this.getMessagesRef}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { setUserPosts })(Messages);\r\n","import React from \"react\";\r\nimport {\r\n  Segment,\r\n  Accordion,\r\n  Header,\r\n  Icon,\r\n  Image,\r\n  List,\r\n} from \"semantic-ui-react\";\r\n\r\nclass MetaPanel extends React.Component {\r\n  state = {\r\n    channel: this.props.currentChannel,\r\n    isPrivateChannel: this.props.isPrivateChannel,\r\n    activeIndex: 0,\r\n  };\r\n\r\n  setActiveIndex = (e, titleProps) => {\r\n    const { index } = titleProps;\r\n    const { activeIndex } = this.state;\r\n    const newIndex = activeIndex === index ? -1 : index;\r\n    this.setState({ activeIndex: newIndex });\r\n  };\r\n\r\n  displayTopPosters = (posts) =>\r\n    Object.entries(posts)\r\n      .sort((a, b) => a[1] - b[1])\r\n      .map(([key, val], i) => (\r\n        <List.Item key={i}>\r\n          <Image avatar src={val.avatar} />\r\n          <List.Content>\r\n            <List.Header as=\"a\">\r\n             {val.name}\r\n            </List.Header>\r\n            <List.Description>{this.formatCount(val.count)}</List.Description>\r\n          </List.Content>\r\n        </List.Item>\r\n      ))\r\n      .reverse()\r\n      .slice(0, 5);\r\n\r\n  formatCount = (num) =>\r\n    num > 1 || num === 0 ? `${num} Posts` : `${num} Post`;\r\n\r\n  render() {\r\n    const { activeIndex, isPrivateChannel, channel } = this.state;\r\n    const { userPosts } = this.props;\r\n\r\n    if (isPrivateChannel) return null;\r\n\r\n    return (\r\n      <Segment loading={!channel}>\r\n        <Header as=\"h3\" attached=\"top\">\r\n          About # {channel && channel.name}\r\n        </Header>\r\n        <Accordion styled attached=\"true\">\r\n          <Accordion.Title\r\n            active={activeIndex === 0}\r\n            index={0}\r\n            onClick={this.setActiveIndex}\r\n          >\r\n            <Icon name=\"dropdown\" />\r\n            <Icon name=\"info\" />\r\n            Channel Details\r\n          </Accordion.Title>\r\n          <Accordion.Content active={activeIndex === 0}>\r\n            {channel && channel.details}\r\n          </Accordion.Content>\r\n\r\n          <Accordion.Title\r\n            active={activeIndex === 1}\r\n            index={1}\r\n            onClick={this.setActiveIndex}\r\n          >\r\n            <Icon name=\"dropdown\" />\r\n            <Icon name=\"user circle\" />\r\n            Top Posters\r\n          </Accordion.Title>\r\n          <Accordion.Content active={activeIndex === 1}>\r\n            <List>{userPosts && this.displayTopPosters(userPosts)}</List>\r\n          </Accordion.Content>\r\n\r\n          <Accordion.Title\r\n            active={activeIndex === 2}\r\n            index={2}\r\n            onClick={this.setActiveIndex}\r\n          >\r\n            <Icon name=\"dropdown\" />\r\n            <Icon name=\"pencil alternate\" />\r\n            Created By\r\n          </Accordion.Title>\r\n          <Accordion.Content active={activeIndex === 2}>\r\n            <Header as=\"h3\">\r\n              <Image circular src={channel && channel.createdBy.avatar} />{\" \"}\r\n              <strong>{channel && channel.createdBy.name}</strong>\r\n            </Header>\r\n          </Accordion.Content>\r\n        </Accordion>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MetaPanel;\r\n","import React from \"react\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport \"./App.css\";\r\nimport ColorPanel from \"./ColorPanel/ColorPanel\";\r\nimport SidePanel from \"./SidePanel/SidePanel\";\r\nimport Messages from \"./Messages/Messages\";\r\nimport MetaPanel from \"./MetaPanel/MetaPanel\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst App = ({\r\n  currentUser,\r\n  currentChannel,\r\n  isPrivateChannel,\r\n  userPosts,\r\n  primaryColor,\r\n  secondaryColor,\r\n}) => {\r\n  return (\r\n    <Grid\r\n      columns=\"equal\"\r\n      className=\"app\"\r\n      style={{ background: secondaryColor }}\r\n    >\r\n      <ColorPanel\r\n        key={currentUser && currentUser.name}\r\n        currentUser={currentUser}\r\n      />\r\n      <SidePanel\r\n        key={currentUser && currentUser.uid}\r\n        currentUser={currentUser}\r\n        primaryColor={primaryColor}\r\n        currentChannel={currentChannel}\r\n      />\r\n      <Grid.Column style={{ marginLeft: 320 }}>\r\n        <Messages\r\n          key={currentChannel && currentChannel.id}\r\n          currentChannel={currentChannel}\r\n          currentUser={currentUser}\r\n          isPrivateChannel={isPrivateChannel}\r\n        />\r\n      </Grid.Column>\r\n      <Grid.Column width={4}>\r\n        <MetaPanel\r\n          currentChannel={currentChannel}\r\n          key={currentChannel && currentChannel.name}\r\n          isPrivateChannel={isPrivateChannel}\r\n          userPosts={userPosts}\r\n        />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  currentUser: state.user.currentUser,\r\n  currentChannel: state.channel.currentChannel,\r\n  isPrivateChannel: state.channel.isPrivateChannel,\r\n  userPosts: state.channel.userPosts,\r\n  primaryColor: state.colors.primaryColor,\r\n  secondaryColor: state.colors.secondaryColor,\r\n});\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import React from \"react\";\r\nimport firebase from \"../../firebase\";\r\nimport {\r\n  Grid,\r\n  Form,\r\n  Segment,\r\n  Button,\r\n  Header,\r\n  Message,\r\n  Image,\r\n} from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { googleAuthProvider } from \"../../firebase\";\r\nimport { motion } from \"framer-motion\";\r\nimport slack from \"../image/slack.svg\";\r\n\r\nclass Login extends React.Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    errors: [],\r\n    loading: false,\r\n    loading2: false,\r\n    usersRef: firebase.database().ref(\"users\"),\r\n  };\r\n\r\n  displayErrors = (errors) =>\r\n    errors.map((error, i) => <p key={i}>{error.message}</p>);\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (this.isFormValid()) {\r\n      this.setState({ errors: [], loading: true });\r\n\r\n      firebase\r\n        .auth()\r\n        .signInWithEmailAndPassword(this.state.email, this.state.password)\r\n        .then((signedInUser) => console.log(signedInUser))\r\n        .catch((err) => {\r\n          console.log(err);\r\n          this.setState({\r\n            errors: this.state.errors.concat(err),\r\n            loading: false,\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  isFormValid = () => {\r\n    let errors = [];\r\n    let error;\r\n\r\n    if (this.isFormEmpty(this.state)) {\r\n      error = { message: \"Fill in all fields\" };\r\n      this.setState({ errors: errors.concat(error) });\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  isFormEmpty = ({ email, password }) => {\r\n    return !email.length || !password.length;\r\n  };\r\n\r\n  handleInputError = (errors, inputName) => {\r\n    return errors.some((error) =>\r\n      error.message.toLowerCase().includes(inputName)\r\n    )\r\n      ? \"error\"\r\n      : \"\";\r\n  };\r\n\r\n  saveUser = (createdUser) => {\r\n    return this.state.usersRef.child(createdUser.user?.uid).set({\r\n      name: createdUser.user?.displayName,\r\n      avatar: createdUser.user?.photoURL,\r\n    });\r\n  };\r\n\r\n  googleLogin = (e) => {\r\n    e.preventDefault();\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(googleAuthProvider)\r\n      .then((signedInUser) => this.saveUser(signedInUser))\r\n      .catch((err) => {\r\n        console.log(err);\r\n        this.setState({\r\n          errors: this.state.errors.concat(err),\r\n          loading2: false,\r\n        });\r\n      });\r\n  };\r\n\r\n  iconVariants = {\r\n    hidden: {\r\n      opacity: 0.5,\r\n    },\r\n    hover: {\r\n      scale: 1.1,\r\n    },\r\n    visible: {\r\n      opacity: 1,\r\n      scale: [1, 1.3, 1.3, 1, 1],\r\n      rotate: [0, 0, 270, 270, 0],\r\n      transition: {\r\n        delay: 0.5,\r\n        duration: 2,\r\n        yoyo: Infinity,\r\n      },\r\n    },\r\n  };\r\n\r\n  render() {\r\n    const { email, password, errors, loading, loading2 } = this.state;\r\n\r\n    return (\r\n      <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app_auth\">\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <Header as=\"h1\" icon color=\"violet\" textAlign=\"center\">\r\n            <motion.div\r\n              variants={this.iconVariants}\r\n              initial=\"hidden\"\r\n              animate=\"visible\"\r\n            >\r\n              <Image src={slack} centered className=\"slack__img\" />\r\n            </motion.div>\r\n            <motion.div\r\n              initial={{ opacity: 0, x: \"100vw\" }}\r\n              animate={{ opacity: 1, x: 0 }}\r\n              transition={{\r\n                type: \"spring\",\r\n                delay: 1,\r\n                duration: 2,\r\n                stiffness: 120,\r\n              }}\r\n            >\r\n              <span className=\"l_color\">Login for Notify-Slack</span>\r\n            </motion.div>\r\n          </Header>\r\n          <motion.div\r\n            initial={{ x: \"-100vw\" }}\r\n            animate={{ x: 0 }}\r\n            transition={{ type: \"spring\", delay: 1.5, duration: 2 }}\r\n          >\r\n            <Form onSubmit={this.handleSubmit} size=\"large\">\r\n              <Segment stacked>\r\n                <Form.Input\r\n                  fluid\r\n                  name=\"email\"\r\n                  icon=\"mail\"\r\n                  iconPosition=\"left\"\r\n                  placeholder=\"Email Address\"\r\n                  onChange={this.handleChange}\r\n                  value={email}\r\n                  className={this.handleInputError(errors, \"email\")}\r\n                  type=\"email\"\r\n                />\r\n\r\n                <Form.Input\r\n                  fluid\r\n                  name=\"password\"\r\n                  icon=\"lock\"\r\n                  iconPosition=\"left\"\r\n                  placeholder=\"Password\"\r\n                  onChange={this.handleChange}\r\n                  value={password}\r\n                  className={this.handleInputError(errors, \"password\")}\r\n                  type=\"password\"\r\n                />\r\n                <p>\r\n                  <motion.div\r\n                    whileHover={{\r\n                      scale: 1.1,\r\n                    }}\r\n                  >\r\n                    <Link to=\"/forgot-password\">Forgot Password?</Link>\r\n                  </motion.div>\r\n                </p>\r\n                <motion.div\r\n                  whileHover={{\r\n                    scale: 1.05,\r\n                  }}\r\n                  transition={{ duration: 0.3 }}\r\n                >\r\n                  <Button\r\n                    disabled={loading}\r\n                    className={loading ? \"loading\" : \"\"}\r\n                    color=\"violet\"\r\n                    fluid\r\n                    size=\"large\"\r\n                  >\r\n                    Login\r\n                  </Button>\r\n                </motion.div>\r\n                <motion.div\r\n                  whileHover={{\r\n                    scale: 1.05,\r\n                  }}\r\n                  transition={{ duration: 0.3 }}\r\n                >\r\n                  <Button\r\n                    disabled={loading2}\r\n                    onClick={this.googleLogin}\r\n                    className={loading2 ? \"loading\" : \"\"}\r\n                    style={{ marginTop: \"1em\" }}\r\n                    color=\"orange\"\r\n                    fluid\r\n                    size=\"large\"\r\n                    icon=\"google\"\r\n                    labelPosition=\"left\"\r\n                    content=\"Login With Google\"\r\n                  />\r\n                </motion.div>\r\n              </Segment>\r\n            </Form>\r\n            {errors.length > 0 && (\r\n              <motion.div\r\n                style={{ marginTop: \"1rem\" }}\r\n                initial={{ opacity: 0 }}\r\n                animate={{ opacity: 1 }}\r\n                transition={{ delay: 0.5 }}\r\n              >\r\n                <Message error>\r\n                  <motion.div\r\n                    initial={{ opacity: 0 }}\r\n                    animate={{ opacity: 1 }}\r\n                    transition={{ delay: 1 }}\r\n                  >\r\n                    <h3>Error</h3>\r\n                    {this.displayErrors(errors)}\r\n                  </motion.div>\r\n                </Message>\r\n              </motion.div>\r\n            )}\r\n\r\n            <Message>\r\n              <motion.div\r\n                whileHover={{\r\n                  scale: 1.05,\r\n                }}\r\n                transition={{ duration: 0.3 }}\r\n              >\r\n                {\" \"}\r\n                New Here? <Link to=\"/register\"> Register </Link>{\" \"}\r\n              </motion.div>\r\n            </Message>\r\n          </motion.div>\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport firebase from \"../../firebase\";\r\nimport md5 from \"md5\";\r\nimport {\r\n  Grid,\r\n  Form,\r\n  Segment,\r\n  Button,\r\n  Header,\r\n  Message,\r\n  Image,\r\n} from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { googleAuthProvider } from \"../../firebase\";\r\nimport { motion } from \"framer-motion\";\r\nimport slack from \"../image/slack.svg\";\r\n\r\nclass Register extends React.Component {\r\n  state = {\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    passwordConfirmation: \"\",\r\n    errors: [],\r\n    loading: false,\r\n    loading2: false,\r\n    usersRef: firebase.database().ref(\"users\"),\r\n    userRef: firebase.auth().currentUser,\r\n    message: null,\r\n  };\r\n\r\n  isFormValid = () => {\r\n    let errors = [];\r\n    let error;\r\n\r\n    if (this.isFormEmpty(this.state)) {\r\n      error = { message: \"Fill in all fields\" };\r\n      this.setState({ errors: errors.concat(error) });\r\n      return false;\r\n    } else if (!this.isPasswordValid(this.state)) {\r\n      error = { message: \"Password is invalid\" };\r\n      this.setState({ errors: errors.concat(error) });\r\n      return false;\r\n    } else if (!this.isEmailValid(this.state)) {\r\n      error = { message: \"Email is invalid\" };\r\n      this.setState({ errors: errors.concat(error) });\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  isEmailValid = ({ email }) => {\r\n    const mail = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n    if (email.match(mail)) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  isFormEmpty = ({ username, email, password, passwordConfirmation }) => {\r\n    return (\r\n      !username.length ||\r\n      !email.length ||\r\n      !password.length ||\r\n      !passwordConfirmation.length\r\n    );\r\n  };\r\n\r\n  isPasswordValid = ({ password, passwordConfirmation }) => {\r\n    if (password.length < 6 || passwordConfirmation.length < 6) {\r\n      return false;\r\n    } else if (password !== passwordConfirmation) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  displayErrors = (errors) =>\r\n    errors.map((error, i) => <p key={i}>{error.message}</p>);\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (this.isFormValid()) {\r\n      this.setState({ errors: [], loading: true });\r\n\r\n      firebase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n        .then((createdUser) => {\r\n          this.setState({ message: null });\r\n          console.log(createdUser);\r\n          createdUser.user\r\n            .updateProfile({\r\n              displayName: this.state.username,\r\n              photoURL: `http://gravatar.com/avatar/${md5(\r\n                createdUser.user?.email\r\n              )}?d=identicon`,\r\n            })\r\n            .then(() => {\r\n              this.saveUser(createdUser).then(() => {\r\n                console.log(\"user saved\");\r\n              });\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n              this.setState({\r\n                errors: this.state.errors.concat(err),\r\n                loading: false,\r\n              });\r\n            });\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n          this.setState({\r\n            errors: this.state.errors.concat(err),\r\n            loading: false,\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  handleInputError = (errors, inputName) => {\r\n    return errors.some((error) =>\r\n      error.message.toLowerCase().includes(inputName)\r\n    )\r\n      ? \"error\"\r\n      : \"\";\r\n  };\r\n\r\n  saveUser = (createdUser) => {\r\n    return this.state.usersRef.child(createdUser.user?.uid).set({\r\n      name: createdUser.user?.displayName,\r\n      avatar: createdUser.user?.photoURL,\r\n    });\r\n  };\r\n\r\n  googleLogin = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ loading2: true });\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(googleAuthProvider)\r\n      .then((signedInUser) => {\r\n        this.saveUser(signedInUser);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        this.setState({\r\n          errors: this.state.errors.concat(err),\r\n          loading2: false,\r\n        });\r\n      });\r\n  };\r\n\r\n  iconVariants = {\r\n    hidden: {\r\n      opacity: 0.5,\r\n    },\r\n    hover: {\r\n      scale: 1.1,\r\n    },\r\n    visible: {\r\n      opacity: 1,\r\n      scale: [1, 1.3, 1.3, 1, 1],\r\n      rotate: [0, 0, 270, 270, 0],\r\n      transition: {\r\n        delay: 0.5,\r\n        duration: 2,\r\n        yoyo: Infinity,\r\n      },\r\n    },\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      username,\r\n      email,\r\n      password,\r\n      passwordConfirmation,\r\n      errors,\r\n      loading,\r\n      loading2,\r\n      message,\r\n    } = this.state;\r\n\r\n    return (\r\n      <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app_auth\">\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <Header as=\"h1\" icon color=\"blue\" textAlign=\"center\">\r\n            <motion.div\r\n              variants={this.iconVariants}\r\n              initial=\"hidden\"\r\n              animate=\"visible\"\r\n            >\r\n              <Image src={slack} centered className=\"slack__img\" />\r\n            </motion.div>\r\n            <motion.div\r\n              initial={{ opacity: 0, x: \"100vw\" }}\r\n              animate={{ opacity: 1, x: 0 }}\r\n              transition={{\r\n                type: \"spring\",\r\n                delay: 1,\r\n                duration: 2,\r\n                stiffness: 120,\r\n              }}\r\n            >\r\n              <span className=\"l_color\">Register for Notify-Slack</span>\r\n            </motion.div>\r\n          </Header>\r\n          <motion.div\r\n            initial={{ x: \"-100vw\" }}\r\n            animate={{ x: 0 }}\r\n            transition={{ type: \"spring\", delay: 1.5, duration: 2 }}\r\n          >\r\n            <Form onSubmit={this.handleSubmit} size=\"large\">\r\n              <Segment stacked>\r\n                <Form.Input\r\n                  fluid\r\n                  name=\"username\"\r\n                  icon=\"user\"\r\n                  iconPosition=\"left\"\r\n                  placeholder=\"Username\"\r\n                  onChange={this.handleChange}\r\n                  value={username}\r\n                  type=\"text\"\r\n                />\r\n\r\n                <Form.Input\r\n                  fluid\r\n                  name=\"email\"\r\n                  icon=\"mail\"\r\n                  iconPosition=\"left\"\r\n                  placeholder=\"Email Address\"\r\n                  onChange={this.handleChange}\r\n                  value={email}\r\n                  className={this.handleInputError(errors, \"email\")}\r\n                  type=\"email\"\r\n                />\r\n\r\n                <Form.Input\r\n                  fluid\r\n                  name=\"password\"\r\n                  icon=\"lock\"\r\n                  iconPosition=\"left\"\r\n                  placeholder=\"Password\"\r\n                  onChange={this.handleChange}\r\n                  value={password}\r\n                  className={this.handleInputError(errors, \"password\")}\r\n                  type=\"password\"\r\n                />\r\n\r\n                <Form.Input\r\n                  fluid\r\n                  name=\"passwordConfirmation\"\r\n                  icon=\"repeat\"\r\n                  iconPosition=\"left\"\r\n                  placeholder=\"Password Confirmation\"\r\n                  onChange={this.handleChange}\r\n                  value={passwordConfirmation}\r\n                  className={this.handleInputError(errors, \"password\")}\r\n                  type=\"password\"\r\n                />\r\n\r\n                <motion.div\r\n                  whileHover={{\r\n                    scale: 1.05,\r\n                  }}\r\n                  transition={{ duration: 0.3 }}\r\n                >\r\n                  <Button\r\n                    disabled={loading}\r\n                    className={loading ? \"loading\" : \"\"}\r\n                    color=\"blue\"\r\n                    fluid\r\n                    size=\"large\"\r\n                  >\r\n                    Register\r\n                  </Button>\r\n                </motion.div>\r\n                <motion.div\r\n                  whileHover={{\r\n                    scale: 1.05,\r\n                  }}\r\n                  transition={{ duration: 0.3 }}\r\n                >\r\n                  <Button\r\n                    disabled={loading2}\r\n                    onClick={this.googleLogin}\r\n                    className={loading2 ? \"loading\" : \"\"}\r\n                    style={{ marginTop: \"1em\" }}\r\n                    color=\"orange\"\r\n                    fluid\r\n                    size=\"large\"\r\n                    icon=\"google\"\r\n                    labelPosition=\"left\"\r\n                    content=\"Register With Google\"\r\n                  />\r\n                </motion.div>\r\n              </Segment>\r\n            </Form>\r\n            {message !== null && <Message message>{message}</Message>}\r\n\r\n            {errors.length > 0 && (\r\n              <motion.div\r\n                style={{ marginTop: \"1rem\" }}\r\n                initial={{ opacity: 0 }}\r\n                animate={{ opacity: 1 }}\r\n                transition={{ delay: 0.5 }}\r\n              >\r\n                <Message error>\r\n                  <motion.div\r\n                    initial={{ opacity: 0 }}\r\n                    animate={{ opacity: 1 }}\r\n                    transition={{ delay: 1 }}\r\n                  >\r\n                    <h3>Error</h3>\r\n                    {this.displayErrors(errors)}\r\n                  </motion.div>\r\n                </Message>\r\n              </motion.div>\r\n            )}\r\n            <Message>\r\n              <motion.div\r\n                whileHover={{\r\n                  scale: 1.05,\r\n                }}\r\n                transition={{ duration: 0.3 }}\r\n              >\r\n                Already an user?\r\n                <Link to=\"/login\"> Login </Link>\r\n              </motion.div>\r\n            </Message>\r\n          </motion.div>\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from \"../actions/types\";\r\nimport { combineReducers } from \"redux\";\r\n\r\n// user reducer\r\nconst initialUserState = {\r\n  currentUser: null,\r\n  isLoading: true,\r\n};\r\n\r\nconst user_reducer = (state = initialUserState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_USER:\r\n      return {\r\n        currentUser: action.payload.currentUser,\r\n        isLoading: false,\r\n      };\r\n\r\n    case actionTypes.CLEAR_USER:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// channel reducer\r\nconst initialChannelState = {\r\n  currentChannel: null,\r\n  isPrivateChannel: false,\r\n  userPosts: null,\r\n};\r\n\r\nconst channel_reducer = (state = initialChannelState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_CURRENT_CHANNEL:\r\n      return {\r\n        ...state,\r\n        currentChannel: action.payload.currentChannel,\r\n      };\r\n    case actionTypes.SET_PRIVATE_CHANNEL:\r\n      return {\r\n        ...state,\r\n        isPrivateChannel: action.payload.isPrivateChannel,\r\n      };\r\n    case actionTypes.SET_USER_POSTS:\r\n      return {\r\n        ...state,\r\n        userPosts: action.payload.userPosts,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// colors reducer\r\nconst initialColorsState = {\r\n  primaryColor: \"#0d47a1\",\r\n  secondaryColor: \"#eee\",\r\n};\r\n\r\nconst colors_reducer = (state = initialColorsState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_COLORS:\r\n      return {\r\n        primaryColor: action.payload.primaryColor,\r\n        secondaryColor: action.payload.secondaryColor,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  user: user_reducer,\r\n  channel: channel_reducer,\r\n  colors: colors_reducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\r\nimport { Loader, Dimmer } from \"semantic-ui-react\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <Dimmer active>\r\n      <Loader size=\"huge\" content={\"Preparing Chat...\"} />{\" \"}\r\n    </Dimmer>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport firebase from \"../../firebase\";\r\nimport {\r\n  Grid,\r\n  Form,\r\n  Segment,\r\n  Button,\r\n  Header,\r\n  Message,\r\n  Icon,\r\n} from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nclass Login extends React.Component {\r\n  state = {\r\n    email: \"\",\r\n    errors: [],\r\n    message: [],\r\n    loading: false,\r\n  };\r\n\r\n  displayErrors = (errors) =>\r\n    errors.map((error, i) => <p key={i}>{error.message}</p>);\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  resetPassword = (event) => {\r\n    event.preventDefault();\r\n    if (this.isFormValid(this.state)) {\r\n      this.setState({ errors: [], loading: true });\r\n\r\n      firebase\r\n        .auth()\r\n        .sendPasswordResetEmail(this.state.email)\r\n        .then(this.setState({ message: \"Check Your Inbox\", loading: false }))\r\n        .catch((err) => {\r\n          console.log(err);\r\n          this.setState({\r\n            errors: this.state.errors.concat(err),\r\n            loading: false,\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  isFormValid = ({ email }) => {\r\n    if (email) {\r\n      return true;\r\n    } else return false;\r\n  };\r\n\r\n  handleInputError = (errors, inputName) => {\r\n    return errors.some((error) =>\r\n      error.message.toLowerCase().includes(inputName)\r\n    )\r\n      ? \"error\"\r\n      : \"\";\r\n  };\r\n\r\n  iconVariants = {\r\n    hidden: {\r\n      opacity: 0.5,\r\n    },\r\n    hover: {\r\n      scale: 1.1,\r\n    },\r\n    visible: {\r\n      opacity: 1,\r\n      scale: [1, 1.3, 1.3, 1, 1],\r\n      rotate: [0, 0, 270, 270, 0],\r\n      transition: {\r\n        delay: 0.5,\r\n        duration: 2,\r\n        yoyo: Infinity,\r\n      },\r\n    },\r\n  };\r\n\r\n  render() {\r\n    const { email, errors, loading, message } = this.state;\r\n\r\n    return (\r\n      <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app_auth\">\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <Header as=\"h1\" icon color=\"violet\" textAlign=\"center\">\r\n            <motion.div\r\n              variants={this.iconVariants}\r\n              initial=\"hidden\"\r\n              animate=\"visible\"\r\n            >\r\n              <Icon name=\"key\" color=\"teal\" />\r\n            </motion.div>\r\n            <motion.div\r\n              initial={{ opacity: 0, x: \"100vw\" }}\r\n              animate={{ opacity: 1, x: 0 }}\r\n              transition={{\r\n                type: \"spring\",\r\n                delay: 1,\r\n                duration: 2,\r\n                stiffness: 120,\r\n              }}\r\n            >\r\n              <span style={{ color: \"red\" }}>Password Reset</span>\r\n            </motion.div>\r\n          </Header>\r\n          <motion.div\r\n            initial={{ x: \"-100vw\" }}\r\n            animate={{ x: 0 }}\r\n            transition={{ type: \"spring\", delay: 1.5, duration: 2 }}\r\n          >\r\n            <Form size=\"large\" onSubmit={this.resetPassword}>\r\n              <Segment stacked>\r\n                <Form.Input\r\n                  fluid\r\n                  name=\"email\"\r\n                  icon=\"mail\"\r\n                  iconPosition=\"left\"\r\n                  placeholder=\"Email Address\"\r\n                  onChange={this.handleChange}\r\n                  value={email}\r\n                  className={this.handleInputError(errors, \"email\")}\r\n                  type=\"email\"\r\n                />\r\n                <motion.div\r\n                  whileHover={{\r\n                    scale: 1.05,\r\n                  }}\r\n                >\r\n                  <Button\r\n                    disabled={loading}\r\n                    className={loading ? \"loading\" : \"\"}\r\n                    color=\"red\"\r\n                    fluid\r\n                    size=\"large\"\r\n                  >\r\n                    Reset Password\r\n                  </Button>\r\n                </motion.div>\r\n                <motion.div\r\n                  whileHover={{\r\n                    scale: 1.05,\r\n                  }}\r\n                  transition={{ duration: 0.3 }}\r\n                  style={{ marginTop: \"1rem\" }}\r\n                >\r\n                  Back to Login <Link to=\"/login\">Login</Link>\r\n                </motion.div>\r\n              </Segment>\r\n            </Form>\r\n            {errors.length > 0 && (\r\n              <motion.div\r\n                style={{ marginTop: \"1rem\" }}\r\n                initial={{ opacity: 0 }}\r\n                animate={{ opacity: 1 }}\r\n                transition={{ delay: 0.5 }}\r\n              >\r\n                <Message error>\r\n                  <motion.div\r\n                    initial={{ opacity: 0 }}\r\n                    animate={{ opacity: 1 }}\r\n                    transition={{ delay: 1 }}\r\n                  >\r\n                    <h3>Error</h3>\r\n                    {this.displayErrors(errors)}\r\n                  </motion.div>\r\n                </Message>\r\n              </motion.div>\r\n            )}\r\n            {message.length > 0 && <Message message>{message}</Message>}\r\n            <Message>\r\n              <motion.div\r\n                whileHover={{\r\n                  scale: 1.05,\r\n                }}\r\n                transition={{ duration: 0.3 }}\r\n              >\r\n                New Here? <Link to=\"/register\"> Register </Link>\r\n              </motion.div>\r\n            </Message>\r\n          </motion.div>\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Grid,\r\n  Header,\r\n  Icon,\r\n  Segment,\r\n  Button,\r\n  Message,\r\n} from \"semantic-ui-react\";\r\nimport firebase from \"../../firebase\";\r\n\r\nclass VerifyEmail extends Component {\r\n  state = {\r\n    message: [],\r\n  };\r\n\r\n  sendVerification = () => {\r\n    var user = firebase.auth().currentUser;\r\n    user\r\n      .sendEmailVerification()\r\n      .then(() => {\r\n        this.setState({ message: \"Email has been sent Successfully\" });\r\n      })\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  render() {\r\n    const { message } = this.state;\r\n    return (\r\n      <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app_auth\">\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <Header as=\"h1\" icon color=\"blue\" textAlign=\"center\">\r\n            <Icon name=\"envelope outline\" color=\"blue\" />\r\n          </Header>\r\n          <Segment stacked>\r\n            <h2 className=\"r_color\">Verify Your Email</h2>\r\n            <p>Click here to send verification</p>\r\n            <Button\r\n              color=\"blue\"\r\n              fluid\r\n              size=\"large\"\r\n              onClick={this.sendVerification}\r\n            >\r\n              Send Verification\r\n            </Button>\r\n          </Segment>\r\n          {message.length > 0 && <Message message>{message}</Message>}\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VerifyEmail;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport Login from \"./components/Auth/Login\";\nimport Register from \"./components/Auth/Register\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport firebase from \"./firebase\";\n\nimport \"semantic-ui-css/semantic.min.css\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  withRouter,\n} from \"react-router-dom\";\nimport { createStore } from \"redux\";\nimport { Provider, connect } from \"react-redux\";\nimport rootReducer from \"./reducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { setUser, clearUser } from \"./actions\";\nimport Spinner from \"./Spinner\";\nimport ForgotPassword from \"./components/Auth/ForgotPassword\";\nimport VerifyEmail from \"./components/Auth/VerifyEmail\";\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nclass Root extends React.Component {\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged((user) => {\n      // var user = firebase.auth().currentUser;\n      if (user /*&& user.emailVerified */) {\n        this.props.setUser(user);\n        this.props.history.push(\"/\");\n        // } else if (user && !user.emailVerified) {\n        //   this.props.setUser(user);\n        //   this.props.history.push(\"/verify-email\");\n      } else {\n        this.props.history.push(\"/login\");\n        this.props.clearUser();\n      }\n    });\n  }\n\n  render() {\n    return this.props.isLoading ? (\n      <Spinner />\n    ) : (\n      <Switch>\n        <Route exact path=\"/\" component={App} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/register\" component={Register} />\n        <Route path=\"/forgot-password\" component={ForgotPassword} />\n        <Route path=\"/verify-email\" component={VerifyEmail} />\n      </Switch>\n    );\n  }\n}\n\nconst mapStateFromProps = (state) => ({\n  isLoading: state.user.isLoading,\n});\n\nconst RootWithAuth = withRouter(\n  connect(mapStateFromProps, { setUser, clearUser })(Root)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <RootWithAuth />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\nregisterServiceWorker();\n"],"sourceRoot":""}